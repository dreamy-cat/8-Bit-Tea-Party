;8-Bit Tea Party!
;License: Creative Commons.

;Ограничения для процессора по желанию, ключевые ограничения для процедуры.

CPU 8086

         org 100h       ;Формат свободный для демонстрации, не забыть вход.
         pushf          ;Дополнительно, если будет комбинация демок.

;В идеале можно организовать простой вывод таблицы умножения, в текством
;режиме, чтобы не вызывать лишний раз отладчик.

         popf
         ret

;Тестовые данные которые были на вещании, можно свободно поменять.

example_data    dw 0000, 00FFh, 0FF00h, 0FFFFh, 00F03h

%include "mul.asm"      ;НАСМ включение, или если не получается то можно
                        ;просто включить файл процедуры прямо сюда.


;8-Бит Чаепитие! Лицензия: Creative Commons.
;Платформа: 8086, CGA+ 16Kb, BIOS.
;Инструменты: NASM(2.15.05).
;Модули: MULT_BIT.ASM.
;Авторы: .

; Демонстрация 8-16-ти битного умножения, .

; Ограничения для процессора по желанию, ключевые ограничения для процедуры.

CPU 8086

         org 100h       ;Формат свободный для демонстрации, не забыть вход.
         pushf          ;Дополнительно, если будет комбинация демок.

         lea si,example_data
         mov cx,0005h
MulD1:   mov ax,[si]
         mov dx,ax
         call near Mul8
         test dh,dh             ;0 - if both zero.
         jz short MulD2
         div dh                 ;test
MulD2:   inc si
         inc si
         loop MulD1

         popf
         ret

examples db 00, 00, 00, 0FFh, ;...
         dw 0FF00h, 0FFFFh    ;...

%include "..\mult_bit.asm"      ;Можно вставить и в начале кода.
